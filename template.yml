---
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  CodeLocationKey:
    Type: "String"
Resources:
  Bucket:
    Type: "AWS::S3::Bucket"
  Role:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: "Allow"
          Action:
          - "sts:AssumeRole"
          Principal:
            Service:
            - "lambda.amazonaws.com"
        Version: "2012-10-17"
      ManagedPolicyArns:
      - Fn::Join:
        - ""
        - - "arn:"
          - Ref: "AWS::Partition"
          - ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      Path: "/anotherPath/"
      Policies:
      - PolicyDocument:
          Statement:
          - Effect: "Allow"
            Action:
            - "logs:CreateLogStream"
            Resource:
            - Fn::Join:
              - ""
              - - "arn:"
                - Ref: "AWS::Partition"
                - ":logs:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":log-group:/aws/lambda/myService-dev-definition:*"
          - Effect: "Allow"
            Action:
            - "logs:PutLogEvents"
            Resource:
            - Fn::Join:
              - ""
              - - "arn:"
                - Ref: "AWS::Partition"
                - ":logs:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":log-group:/aws/lambda/myService-dev-definition:*"
                - ":*"
          Version: "2012-10-17"
        PolicyName: "dev-myService-lambda"
      RoleName:
        Fn::Join:
        - ""
        - - "myService-dev-"
          - Ref: "AWS::Region"
          - "-lambdaRole"
  LogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: "/aws/lambda/myService-dev-myFunction"
  Function:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket:
          Ref: "Bucket"
        S3Key:
          Ref: "CodeLocationKey"
      Handler: "org.http4k.serverless.lambda.LambdaFunction::handle"
      Role:
        Ref: "Role"
      Runtime: "java8"
  LogGroup2:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: "/aws/lambda/myService-dev-myFunction2"
  Role2:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: "Allow"
          Action:
          - "sts:AssumeRole"
          Principal:
            Service:
            - "lambda.amazonaws.com"
        Version: "2012-10-17"
      ManagedPolicyArns:
      - Fn::Join:
        - ""
        - - "arn:"
          - Ref: "AWS::Partition"
          - ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      Path: "/SomewhereElse/"
      Policies:
      - PolicyDocument:
          Statement:
          - Effect: "Allow"
            Action:
            - "logs:CreateLogStream"
            Resource:
            - Fn::Join:
              - ""
              - - "arn:"
                - Ref: "AWS::Partition"
                - ":logs:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":log-group:/aws/lambda/myService-dev-definition:*"
          - Effect: "Allow"
            Action:
            - "logs:PutLogEvents"
            Resource:
            - Fn::Join:
              - ""
              - - "arn:"
                - Ref: "AWS::Partition"
                - ":logs:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":log-group:/aws/lambda/myService-dev-definition:*"
                - ":*"
          Version: "2012-10-17"
        PolicyName: "dev-myService-lambda"
      RoleName:
        Fn::Join:
        - ""
        - - "myService-dev-"
          - Ref: "AWS::Region"
          - "-lambdaRole"
  Function2:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket:
          Ref: "Bucket"
        S3Key:
          Ref: "CodeLocationKey"
      Handler: "org.http4k.serverless.lambda.LambdaFunction::handle"
      Role:
        Ref: "Role2"
      Runtime: "java8"
